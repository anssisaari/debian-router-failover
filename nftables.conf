#! /usr/sbin/nft -f

# Based on https://wiki.nftables.org/wiki-nftables/index.php/Simple_ruleset_for_a_home_router
flush ruleset

define DEV_PRIVATE = br0
define DEV_WORLD = enp1s0
define DEV_WORLD2 = wwan0
define NET_PRIVATE = 10.0.2.0/24

table inet global {

    chain inbound_world {
        # allow SSH connections from some well-known internet hosts
	# TBD later, below is an example.
        # ip saddr 81.209.165.42 tcp dport ssh accept
    }

    chain inbound_private {
        # allow DHCP, DNS and SSH from the private network
	# th is "transport header". I guess it's needed since this matches both udp and tcp.
	# So I think this protocol . th port defines the vmap format?
	ip protocol . th dport vmap { tcp . 22 : accept, udp . 53 : accept, tcp . 53 : accept, udp . 67 : accept}

	# ICMP on the internal interface.
	meta l4proto icmp icmp type {
		echo-request,
		destination-unreachable,
		router-solicitation,
		router-advertisement,
		time-exceeded,
		parameter-problem
	} counter accept comment "Accept ICMP"

    }

    chain inbound {
        type filter hook input priority 0; policy drop;

        # Allow traffic from established and related packets, drop invalid
        ct state vmap { established : accept, related : accept, invalid : drop }

        # allow loopback traffic, anything else jump to chain for further evaluation
        iifname vmap { lo : accept, $DEV_WORLD : jump inbound_world, $DEV_WORLD2 : jump inbound_world, $DEV_PRIVATE : jump inbound_private }

	counter reject with icmpx type port-unreachable # reject everything else

        # the rest is dropped by the above policy
    }

    chain forward {
        type filter hook forward priority 0; policy drop;

        # Allow traffic from established and related packets, drop invalid
        ct state vmap { established : accept, related : accept, invalid : drop }

        # connections from the internal net to the internet or to other
        # internal nets are allowed
        iifname $DEV_PRIVATE accept

        # the rest is dropped by the above policy
    }

    chain postrouting {
        type nat hook postrouting priority 100; policy accept;

        # masquerade private IP addresses
        ip saddr $NET_PRIVATE oifname $DEV_WORLD masquerade
        ip saddr $NET_PRIVATE oifname $DEV_WORLD2 masquerade
    }
}
